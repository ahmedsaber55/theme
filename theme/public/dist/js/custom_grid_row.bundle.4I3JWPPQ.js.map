{
  "version": 3,
  "sources": ["../../../../../apps/theme/theme/public/js/custom_grid_row.bundle.js"],
  "sourcesContent": ["\n\nexport default class GridRow {\n\tconstructor(opts) {\n\t\tthis.on_grid_fields_dict = {};\n\t\tthis.on_grid_fields = [];\n\t\t$.extend(this, opts);\n\t\tthis.set_docfields();\n\t\tthis.columns = {};\n\t\tthis.columns_list = [];\n\t\tthis.row_check_html = '<input type=\"checkbox\" class=\"grid-row-check\">';\n\t\tthis.make();\n        console.log('AAAA');\n\t}\n\tmake() {\n\t\tlet me = this;\n\t\tlet render_row = true;\n\n\t\tthis.wrapper = $('<div class=\"grid-row\"></div>');\n\t\tthis.row = $('<div class=\"data-row row\"></div>')\n\t\t\t.appendTo(this.wrapper)\n\t\t\t.on(\"click\", function (e) {\n\t\t\t\tif (\n\t\t\t\t\t$(e.target).hasClass(\"grid-row-check\") ||\n\t\t\t\t\t$(e.target).hasClass(\"row-index\") ||\n\t\t\t\t\t$(e.target).parent().hasClass(\"row-index\")\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (me.grid.allow_on_grid_editing() && me.grid.is_editable()) {\n\t\t\t\t\t// pass\n\t\t\t\t} else {\n\t\t\t\t\tme.toggle_view();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\tif (this.grid.template && !this.grid.meta.editable_grid) {\n\t\t\tthis.render_template();\n\t\t} else {\n\t\t\trender_row = this.render_row();\n\t\t}\n\n\t\tif (!this.render_row) return;\n\n\t\tthis.set_data();\n\t\tthis.wrapper.appendTo(this.parent);\n\t}\n\n\tset_docfields(update = false) {\n\t\tif (this.doc && this.parent_df.options) {\n\t\t\tfrappe.meta.make_docfield_copy_for(\n\t\t\t\tthis.parent_df.options,\n\t\t\t\tthis.doc.name,\n\t\t\t\tthis.docfields\n\t\t\t);\n\t\t\tconst docfields = frappe.meta.get_docfields(this.parent_df.options, this.doc.name);\n\t\t\tif (update) {\n\t\t\t\t// to maintain references\n\t\t\t\tthis.docfields.forEach((df) => {\n\t\t\t\t\tObject.assign(\n\t\t\t\t\t\tdf,\n\t\t\t\t\t\tdocfields.find((d) => d.fieldname === df.fieldname)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.docfields = docfields;\n\t\t\t}\n\t\t}\n\t}\n\n\tset_data() {\n\t\tthis.wrapper.data({\n\t\t\tgrid_row: this,\n\t\t\tdoc: this.doc || \"\",\n\t\t});\n\t}\n\tset_row_index() {\n\t\tif (this.doc) {\n\t\t\tthis.wrapper\n\t\t\t\t.attr(\"data-name\", this.doc.name)\n\t\t\t\t.attr(\"data-idx\", this.doc.idx)\n\t\t\t\t.find(\".row-index span, .grid-form-row-index\")\n\t\t\t\t.html(this.doc.idx);\n\t\t}\n\t}\n\tselect(checked) {\n\t\tthis.doc.__checked = checked ? 1 : 0;\n\t}\n\trefresh_check() {\n\t\tthis.wrapper\n\t\t\t.find(\".grid-row-check\")\n\t\t\t.prop(\"checked\", this.doc ? !!this.doc.__checked : false);\n\t\tthis.grid.refresh_remove_rows_button();\n\t}\n\tremove() {\n\t\tvar me = this;\n\t\tif (this.grid.is_editable()) {\n\t\t\tif (this.frm) {\n\t\t\t\tif (this.get_open_form()) {\n\t\t\t\t\tthis.hide_form();\n\t\t\t\t}\n\n\t\t\t\tfrappe\n\t\t\t\t\t.run_serially([\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\treturn this.frm.script_manager.trigger(\n\t\t\t\t\t\t\t\t\"before_\" + this.grid.df.fieldname + \"_remove\",\n\t\t\t\t\t\t\t\tthis.doc.doctype,\n\t\t\t\t\t\t\t\tthis.doc.name\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tfrappe.model.clear_doc(this.doc.doctype, this.doc.name);\n\n\t\t\t\t\t\t\tthis.frm.script_manager.trigger(\n\t\t\t\t\t\t\t\tthis.grid.df.fieldname + \"_remove\",\n\t\t\t\t\t\t\t\tthis.doc.doctype,\n\t\t\t\t\t\t\t\tthis.doc.name\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.frm.dirty();\n\t\t\t\t\t\t\tthis.grid.refresh();\n\t\t\t\t\t\t},\n\t\t\t\t\t])\n\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t// aborted\n\t\t\t\t\t\tconsole.trace(e); // eslint-disable-line\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet data = null;\n\t\t\t\tif (this.grid.df.get_data) {\n\t\t\t\t\tdata = this.grid.df.get_data();\n\t\t\t\t} else {\n\t\t\t\t\tdata = this.grid.df.data;\n\t\t\t\t}\n\n\t\t\t\tconst index = data.findIndex((d) => d.name === me.doc.name);\n\n\t\t\t\tif (index > -1) {\n\t\t\t\t\t// mutate array directly,\n\t\t\t\t\t// else the object reference will be lost\n\t\t\t\t\tdata.splice(index, 1);\n\t\t\t\t}\n\t\t\t\t// remap idxs\n\t\t\t\tdata.forEach(function (d, i) {\n\t\t\t\t\td.idx = i + 1;\n\t\t\t\t});\n\n\t\t\t\tthis.grid.refresh();\n\t\t\t}\n\t\t}\n\t}\n\tinsert(show, below, duplicate) {\n\t\tvar idx = this.doc.idx;\n\t\tvar copy_doc = duplicate ? this.doc : null;\n\t\tif (below) idx++;\n\t\tthis.toggle_view(false);\n\t\tthis.grid.add_new_row(idx, null, show, copy_doc);\n\t}\n\tmove() {\n\t\t// promopt the user where they want to move this row\n\t\tvar me = this;\n\t\tfrappe.prompt(\n\t\t\t{\n\t\t\t\tfieldname: \"move_to\",\n\t\t\t\tlabel: __(\"Move to Row Number\"),\n\t\t\t\tfieldtype: \"Int\",\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: this.doc.idx,\n\t\t\t},\n\t\t\tfunction (values) {\n\t\t\t\tif (me.doc._sortable === false) {\n\t\t\t\t\tfrappe.msgprint(__(\"Cannot move row\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// renumber and refresh\n\t\t\t\tlet data = me.grid.get_data();\n\t\t\t\tdata.move(me.doc.idx - 1, values.move_to - 1);\n\n\t\t\t\t// renum idx\n\t\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\t\tdata[i].idx = i + 1;\n\t\t\t\t}\n\n\t\t\t\tme.toggle_view(false);\n\t\t\t\tme.grid.refresh();\n\t\t\t\t$(me.frm.wrapper).trigger(\"grid-move-row\", [me.frm, me]);\n\t\t\t},\n\t\t\t__(\"Move To\"),\n\t\t\t\"Update\"\n\t\t);\n\t}\n\trefresh() {\n\t\t// update docfields for new record\n\t\tif (this.frm && this.doc && this.doc.__islocal) {\n\t\t\tthis.set_docfields(true);\n\t\t}\n\n\t\tif (this.frm && this.doc) {\n\t\t\tthis.doc = locals[this.doc.doctype][this.doc.name];\n\t\t}\n\n\t\tif (this.grid.template && !this.grid.meta.editable_grid) {\n\t\t\tthis.render_template();\n\t\t} else {\n\t\t\tthis.render_row(true);\n\t\t}\n\n\t\t// refresh form fields\n\t\tif (this.grid_form) {\n\t\t\tthis.grid_form.layout && this.grid_form.layout.refresh(this.doc);\n\t\t}\n\t}\n\trender_template() {\n\t\tthis.set_row_index();\n\n\t\tif (this.row_display) {\n\t\t\tthis.row_display.remove();\n\t\t}\n\n\t\t// row index\n\t\tif (!this.row_index) {\n\t\t\tthis.row_index = $(\n\t\t\t\t`<div class=\"template-row-index\">${this.row_check_html}<span></span></div>`\n\t\t\t).appendTo(this.row);\n\t\t}\n\n\t\tif (this.doc) {\n\t\t\tthis.row_index.find(\"span\").html(this.doc.idx);\n\t\t}\n\n\t\tthis.row_display = $('<div class=\"row-data sortable-handle template-row\"></div>')\n\t\t\t.appendTo(this.row)\n\t\t\t.html(\n\t\t\t\tfrappe.render(this.grid.template, {\n\t\t\t\t\tdoc: this.doc ? frappe.get_format_helper(this.doc) : null,\n\t\t\t\t\tfrm: this.frm,\n\t\t\t\t\trow: this,\n\t\t\t\t})\n\t\t\t);\n\t}\n\trender_row(refresh) {\n\t\tif (this.show_search && !this.show_search_row()) return;\n\n\t\tlet me = this;\n\t\tthis.set_row_index();\n\n\t\t// index (1, 2, 3 etc)\n\t\tif (!this.row_index && !this.show_search) {\n\t\t\t// REDESIGN-TODO: Make translation contextual, this No is Number\n\t\t\tvar txt = this.doc ? this.doc.idx : __(\"No.\");\n\n\t\t\tthis.row_check = $(\n\t\t\t\t`<div class=\"row-check sortable-handle col\">\n\t\t\t\t\t${this.row_check_html}\n\t\t\t\t</div>`\n\t\t\t).appendTo(this.row);\n\n\t\t\tthis.row_index = $(\n\t\t\t\t`<div class=\"row-index sortable-handle col\">\n\t\t\t\t\t<span>${txt}</span>\n\t\t\t\t</div>`\n\t\t\t)\n\t\t\t\t.appendTo(this.row)\n\t\t\t\t.on(\"click\", function (e) {\n\t\t\t\t\tif (!$(e.target).hasClass(\"grid-row-check\")) {\n\t\t\t\t\t\tme.toggle_view();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else if (this.show_search) {\n\t\t\tthis.row_check = $(`<div class=\"row-check col search\"></div>`).appendTo(this.row);\n\n\t\t\tthis.row_index = $(\n\t\t\t\t`<div class=\"row-index col search\">\n\t\t\t\t\t<input type=\"text\" class=\"form-control input-xs text-center\" >\n\t\t\t\t</div>`\n\t\t\t).appendTo(this.row);\n\n\t\t\tthis.row_index.find(\"input\").on(\n\t\t\t\t\"keyup\",\n\t\t\t\tfrappe.utils.debounce((e) => {\n\t\t\t\t\tlet df = {\n\t\t\t\t\t\tfieldtype: \"Sr No\",\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.grid.filter[\"row-index\"] = {\n\t\t\t\t\t\tdf: df,\n\t\t\t\t\t\tvalue: e.target.value,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (e.target.value == \"\") {\n\t\t\t\t\t\tdelete this.grid.filter[\"row-index\"];\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.grid.grid_sortable.option(\n\t\t\t\t\t\t\"disabled\",\n\t\t\t\t\t\tObject.keys(this.grid.filter).length !== 0\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.grid.prevent_build = true;\n\t\t\t\t\tme.grid.refresh();\n\t\t\t\t\tthis.grid.prevent_build = false;\n\t\t\t\t}, 500)\n\t\t\t);\n\t\t\tfrappe.utils.only_allow_num_decimal(this.row_index.find(\"input\"));\n\t\t} else {\n\t\t\tthis.row_index.find(\"span\").html(txt);\n\t\t}\n\n\t\tthis.setup_columns();\n\t\tthis.add_open_form_button();\n\t\tthis.add_column_configure_button();\n\t\tthis.refresh_check();\n\n\t\tif (this.frm && this.doc) {\n\t\t\t$(this.frm.wrapper).trigger(\"grid-row-render\", [this]);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tmake_editable() {\n\t\tthis.row.toggleClass(\"editable-row\", this.grid.is_editable());\n\t}\n\n\tis_too_small() {\n\t\treturn this.row.width() ? this.row.width() < 300 : false;\n\t}\n\n\tadd_open_form_button() {\n\t\tvar me = this;\n\t\tif (this.doc && !this.grid.df.in_place_edit) {\n\t\t\t// remove row\n\t\t\tif (!this.open_form_button) {\n\t\t\t\tthis.open_form_button = $('<div class=\"col\"></div>').appendTo(this.row);\n\n\t\t\t\tif (!this.configure_columns) {\n\t\t\t\t\tthis.open_form_button = $(`\n\t\t\t\t\t\t<div class=\"btn-open-row\">\n\t\t\t\t\t\t\t<a>${frappe.utils.icon(\"edit\", \"xs\")}</a>\n\t\t\t\t\t\t\t<div class=\"hidden-md edit-grid-row\">${__(\"Edit\", \"\", \"Edit grid row\")}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`)\n\t\t\t\t\t\t.appendTo(this.open_form_button)\n\t\t\t\t\t\t.on(\"click\", function () {\n\t\t\t\t\t\t\tme.toggle_view();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (this.is_too_small()) {\n\t\t\t\t\t// narrow\n\t\t\t\t\tthis.open_form_button.css({ \"margin-right\": \"-2px\" });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tadd_column_configure_button() {\n\t\tif (this.grid.df.in_place_edit && !this.frm) return;\n\n\t\tif (this.configure_columns && this.frm) {\n\t\t\tthis.configure_columns_button = $(`\n\t\t\t\t<div class=\"col grid-static-col d-flex justify-content-center\" style=\"cursor: pointer;\">\n\t\t\t\t\t<a>${frappe.utils.icon(\"setting-gear\", \"sm\", \"\", \"filter: opacity(0.5)\")}</a>\n\t\t\t\t</div>\n\t\t\t`)\n\t\t\t\t.appendTo(this.row)\n\t\t\t\t.on(\"click\", () => {\n\t\t\t\t\tthis.configure_dialog_for_columns_selector();\n\t\t\t\t});\n\t\t} else if (this.configure_columns && !this.frm) {\n\t\t\tthis.configure_columns_button = $(`\n\t\t\t\t<div class=\"col grid-static-col\"></div>\n\t\t\t`).appendTo(this.row);\n\t\t}\n\t}\n\n\tconfigure_dialog_for_columns_selector() {\n\t\tthis.grid_settings_dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Configure Columns\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\t\tfieldname: \"fields_html\",\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tthis.grid.setup_visible_columns();\n\t\tthis.setup_columns_for_dialog();\n\t\tthis.prepare_wrapper_for_columns();\n\t\tthis.render_selected_columns();\n\t\tthis.grid_settings_dialog.show();\n\n\t\t$(this.fields_html_wrapper)\n\t\t\t.find(\".add-new-fields\")\n\t\t\t.click(() => {\n\t\t\t\tthis.column_selector_for_dialog();\n\t\t\t});\n\n\t\tthis.grid_settings_dialog.set_primary_action(__(\"Update\"), () => {\n\t\t\tthis.validate_columns_width();\n\t\t\tthis.columns = {};\n\t\t\tthis.update_user_settings_for_grid();\n\t\t\tthis.grid_settings_dialog.hide();\n\t\t});\n\n\t\tthis.grid_settings_dialog.set_secondary_action_label(__(\"Reset to default\"));\n\t\tthis.grid_settings_dialog.set_secondary_action(() => {\n\t\t\tthis.reset_user_settings_for_grid();\n\t\t\tthis.grid_settings_dialog.hide();\n\t\t});\n\t}\n\n\tsetup_columns_for_dialog() {\n\t\tthis.selected_columns_for_grid = [];\n\t\tthis.grid.visible_columns.forEach((row) => {\n\t\t\tthis.selected_columns_for_grid.push({\n\t\t\t\tfieldname: row[0].fieldname,\n\t\t\t\tcolumns: row[0].columns || row[0].colsize,\n\t\t\t});\n\t\t});\n\t}\n\n\tprepare_wrapper_for_columns() {\n\t\tthis.fields_html_wrapper = this.grid_settings_dialog.get_field(\"fields_html\").$wrapper[0];\n\n\t\t$(`\n\t\t\t<div class='form-group'>\n\t\t\t\t<div class='row' style='margin:0px; margin-bottom:10px'>\n\t\t\t\t\t<div class='col-md-8'>\n\t\t\t\t\t\t${__(\"Fieldname\").bold()}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-md-4' style='padding-left:5px;'>\n\t\t\t\t\t\t${__(\"Column Width\").bold()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='control-input-wrapper selected-fields'>\n\t\t\t\t</div>\n\t\t\t\t<p class='help-box small text-muted'>\n\t\t\t\t\t<a class='add-new-fields text-muted'>\n\t\t\t\t\t\t+ ${__(\"Add / Remove Columns\")}\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`).appendTo(this.fields_html_wrapper);\n\t}\n\n\tcolumn_selector_for_dialog() {\n\t\tlet docfields = this.prepare_columns_for_dialog(\n\t\t\tthis.selected_columns_for_grid.map((field) => field.fieldname)\n\t\t);\n\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(this.grid.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: docfields,\n\t\t\t\t\tcolumns: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\td.set_primary_action(__(\"Add\"), () => {\n\t\t\tlet selected_fields = d.get_values().fields;\n\t\t\tthis.selected_columns_for_grid = [];\n\t\t\tif (selected_fields) {\n\t\t\t\tselected_fields.forEach((selected_column) => {\n\t\t\t\t\tlet docfield = frappe.meta.get_docfield(this.grid.doctype, selected_column);\n\t\t\t\t\tthis.grid.update_default_colsize(docfield);\n\n\t\t\t\t\tthis.selected_columns_for_grid.push({\n\t\t\t\t\t\tfieldname: selected_column,\n\t\t\t\t\t\tcolumns: docfield.columns || docfield.colsize,\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.render_selected_columns();\n\t\t\t\td.hide();\n\t\t\t}\n\t\t});\n\n\t\td.show();\n\t}\n\n\tprepare_columns_for_dialog(selected_fields) {\n\t\tlet fields = [];\n\n\t\tconst blocked_fields = frappe.model.no_value_type;\n\t\tconst always_allow = [\"Button\"];\n\n\t\tconst show_field = (f) => always_allow.includes(f) || !blocked_fields.includes(f);\n\n\t\tthis.docfields.forEach((column) => {\n\t\t\tif (!column.hidden && show_field(column.fieldtype)) {\n\t\t\t\tfields.push({\n\t\t\t\t\tlabel: column.label,\n\t\t\t\t\tvalue: column.fieldname,\n\t\t\t\t\tchecked: selected_fields ? in_list(selected_fields, column.fieldname) : false,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn fields;\n\t}\n\n\trender_selected_columns() {\n\t\tlet fields = \"\";\n\t\tif (this.selected_columns_for_grid) {\n\t\t\tthis.selected_columns_for_grid.forEach((d) => {\n\t\t\t\tlet docfield = frappe.meta.get_docfield(this.grid.doctype, d.fieldname);\n\n\t\t\t\tfields += `\n\t\t\t\t\t<div class='control-input flex align-center form-control fields_order sortable-handle sortable'\n\t\t\t\t\t\tstyle='display: block; margin-bottom: 5px; cursor: pointer;' data-fieldname='${docfield.fieldname}'\n\t\t\t\t\t\tdata-label='${docfield.label}' data-type='${docfield.fieldtype}'>\n\n\t\t\t\t\t\t<div class='row'>\n\t\t\t\t\t\t\t<div class='col-md-1' style='padding-top: 2px'>\n\t\t\t\t\t\t\t\t<a style='cursor: grabbing;'>${frappe.utils.icon(\"drag\", \"xs\")}</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-md-7' style='padding-left:0px; padding-top:3px'>\n\t\t\t\t\t\t\t\t${__(docfield.label)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-md-3' style='padding-left:0px;margin-top:-2px;' title='${__(\"Columns\")}'>\n\t\t\t\t\t\t\t\t<input class='form-control column-width input-xs text-right'\n\t\t\t\t\t\t\t\t\tvalue='${docfield.columns || cint(d.columns)}'\n\t\t\t\t\t\t\t\t\tdata-fieldname='${docfield.fieldname}' style='background-color: var(--modal-bg); display: inline'>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class='col-md-1' style='padding-top: 3px'>\n\t\t\t\t\t\t\t\t<a class='text-muted remove-field' data-fieldname='${docfield.fieldname}'>\n\t\t\t\t\t\t\t\t\t<i class='fa fa-trash-o' aria-hidden='true'></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`;\n\t\t\t});\n\t\t}\n\n\t\t$(this.fields_html_wrapper).find(\".selected-fields\").html(fields);\n\n\t\tthis.prepare_handler_for_sort();\n\t\tthis.select_on_focus();\n\t\tthis.update_column_width();\n\t\tthis.remove_selected_column();\n\t}\n\n\tprepare_handler_for_sort() {\n\t\tnew Sortable($(this.fields_html_wrapper).find(\".selected-fields\")[0], {\n\t\t\thandle: \".sortable-handle\",\n\t\t\tdraggable: \".sortable\",\n\t\t\tonUpdate: () => {\n\t\t\t\tthis.sort_columns();\n\t\t\t},\n\t\t});\n\t}\n\n\tsort_columns() {\n\t\tthis.selected_columns_for_grid = [];\n\n\t\tlet columns = $(this.fields_html_wrapper).find(\".fields_order\") || [];\n\t\tcolumns.each((idx) => {\n\t\t\tthis.selected_columns_for_grid.push({\n\t\t\t\tfieldname: $(columns[idx]).attr(\"data-fieldname\"),\n\t\t\t\tcolumns: cint($(columns[idx]).find(\".column-width\").attr(\"value\")),\n\t\t\t});\n\t\t});\n\t}\n\n\tselect_on_focus() {\n\t\t$(this.fields_html_wrapper)\n\t\t\t.find(\".column-width\")\n\t\t\t.click((event) => {\n\t\t\t\t$(event.target).select();\n\t\t\t});\n\t}\n\n\tupdate_column_width() {\n\t\t$(this.fields_html_wrapper)\n\t\t\t.find(\".column-width\")\n\t\t\t.change((event) => {\n\t\t\t\tif (cint(event.target.value) === 0) {\n\t\t\t\t\tevent.target.value = cint(event.target.defaultValue);\n\t\t\t\t\tfrappe.throw(__(\"Column width cannot be zero.\"));\n\t\t\t\t}\n\n\t\t\t\tthis.selected_columns_for_grid.forEach((row) => {\n\t\t\t\t\tif (row.fieldname === event.target.dataset.fieldname) {\n\t\t\t\t\t\trow.columns = cint(event.target.value);\n\t\t\t\t\t\tevent.target.defaultValue = cint(event.target.value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tvalidate_columns_width() {\n\t\tlet total_column_width = 0.0;\n\n\t\tthis.selected_columns_for_grid.forEach((row) => {\n\t\t\tif (row.columns && row.columns > 0) {\n\t\t\t\ttotal_column_width += cint(row.columns);\n\t\t\t}\n\t\t});\n\n\t\tif (total_column_width && total_column_width > 10) {\n\t\t\tfrappe.throw(__(\"The total column width cannot be more than 10.\"));\n\t\t}\n\t}\n\n\tremove_selected_column() {\n\t\t$(this.fields_html_wrapper)\n\t\t\t.find(\".remove-field\")\n\t\t\t.click((event) => {\n\t\t\t\tlet fieldname = event.currentTarget.dataset.fieldname;\n\t\t\t\tlet selected_columns_for_grid = this.selected_columns_for_grid.filter((row) => {\n\t\t\t\t\treturn row.fieldname !== fieldname;\n\t\t\t\t});\n\n\t\t\t\tif (selected_columns_for_grid && selected_columns_for_grid.length === 0) {\n\t\t\t\t\tfrappe.throw(__(\"At least one column is required to show in the grid.\"));\n\t\t\t\t}\n\n\t\t\t\tthis.selected_columns_for_grid = selected_columns_for_grid;\n\t\t\t\t$(this.fields_html_wrapper).find(`[data-fieldname=\"${fieldname}\"]`).remove();\n\t\t\t});\n\t}\n\n\tupdate_user_settings_for_grid() {\n\t\tif (!this.selected_columns_for_grid || !this.frm) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet value = {};\n\t\tvalue[this.grid.doctype] = this.selected_columns_for_grid;\n\t\tfrappe.model.user_settings.save(this.frm.doctype, \"GridView\", value).then((r) => {\n\t\t\tfrappe.model.user_settings[this.frm.doctype] = r.message || r;\n\t\t\tthis.grid.reset_grid();\n\t\t});\n\t}\n\n\treset_user_settings_for_grid() {\n\t\tfrappe.model.user_settings.save(this.frm.doctype, \"GridView\", null).then((r) => {\n\t\t\tfrappe.model.user_settings[this.frm.doctype] = r.message || r;\n\t\t\tthis.grid.reset_grid();\n\t\t});\n\t}\n\n\tsetup_columns() {\n\t\tthis.focus_set = false;\n\t\tthis.search_columns = {};\n\n\t\tthis.grid.setup_visible_columns();\n\t\tlet fields =\n\t\t\tthis.grid.user_defined_columns && this.grid.user_defined_columns.length > 0\n\t\t\t\t? this.grid.user_defined_columns\n\t\t\t\t: this.docfields;\n\n\t\tthis.grid.visible_columns.forEach((col, ci) => {\n\t\t\t// to get update df for the row\n\t\t\tlet df = fields.find((field) => field?.fieldname === col[0].fieldname);\n\n\t\t\tthis.set_dependant_property(df);\n\n\t\t\tlet colsize = col[1];\n\n\t\t\tlet txt = this.doc\n\t\t\t\t? frappe.format(this.doc[df.fieldname], df, null, this.doc)\n\t\t\t\t: __(df.label);\n\n\t\t\tif (this.doc && df.fieldtype === \"Select\") {\n\t\t\t\ttxt = __(txt);\n\t\t\t}\n\t\t\tlet column;\n\t\t\tif (!this.columns[df.fieldname] && !this.show_search) {\n\t\t\t\tcolumn = this.make_column(df, colsize, txt, ci);\n\t\t\t} else if (!this.columns[df.fieldname] && this.show_search) {\n\t\t\t\tcolumn = this.make_search_column(df, colsize);\n\t\t\t} else {\n\t\t\t\tcolumn = this.columns[df.fieldname];\n\t\t\t\tthis.refresh_field(df.fieldname, txt);\n\t\t\t}\n\n\t\t\t// background color for cell\n\t\t\tif (this.doc) {\n\t\t\t\tif (df.reqd && !txt) {\n\t\t\t\t\tcolumn.addClass(\"error\");\n\t\t\t\t}\n\t\t\t\tif (column.is_invalid) {\n\t\t\t\t\tcolumn.addClass(\"invalid\");\n\t\t\t\t} else if (df.reqd || df.bold) {\n\t\t\t\t\tcolumn.addClass(\"bold\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (this.show_search) {\n\t\t\t// last empty column\n\t\t\t$(`<div class=\"col grid-static-col search\"></div>`).appendTo(this.row);\n\t\t}\n\t}\n\n\tset_dependant_property(df) {\n\t\tif (\n\t\t\t!df.reqd &&\n\t\t\tdf.mandatory_depends_on &&\n\t\t\tthis.evaluate_depends_on_value(df.mandatory_depends_on)\n\t\t) {\n\t\t\tdf.reqd = 1;\n\t\t}\n\n\t\tif (\n\t\t\t!df.read_only &&\n\t\t\tdf.read_only_depends_on &&\n\t\t\tthis.evaluate_depends_on_value(df.read_only_depends_on)\n\t\t) {\n\t\t\tdf.read_only = 1;\n\t\t}\n\t}\n\n\tevaluate_depends_on_value(expression) {\n\t\tlet out = null;\n\t\tlet doc = this.doc;\n\n\t\tif (!doc) return;\n\n\t\tlet parent = this.frm ? this.frm.doc : this.doc || null;\n\n\t\tif (typeof expression === \"boolean\") {\n\t\t\tout = expression;\n\t\t} else if (typeof expression === \"function\") {\n\t\t\tout = expression(doc);\n\t\t} else if (expression.substr(0, 5) == \"eval:\") {\n\t\t\ttry {\n\t\t\t\tout = frappe.utils.eval(expression.substr(5), { doc, parent });\n\t\t\t\tif (parent && parent.istable && expression.includes(\"is_submittable\")) {\n\t\t\t\t\tout = true;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tfrappe.throw(__('Invalid \"depends_on\" expression'));\n\t\t\t}\n\t\t} else if (expression.substr(0, 3) == \"fn:\" && this.frm) {\n\t\t\tout = this.frm.script_manager.trigger(\n\t\t\t\texpression.substr(3),\n\t\t\t\tthis.doctype,\n\t\t\t\tthis.docname\n\t\t\t);\n\t\t} else {\n\t\t\tvar value = doc[expression];\n\t\t\tif ($.isArray(value)) {\n\t\t\t\tout = !!value.length;\n\t\t\t} else {\n\t\t\t\tout = !!value;\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tshow_search_row() {\n\t\t// show or remove search columns based on grid rows\n\t\tthis.show_search =\n\t\t\tthis.show_search && (this.grid?.data?.length >= 20 || this.grid.filter_applied);\n\t\t!this.show_search && this.wrapper.remove();\n\t\treturn this.show_search;\n\t}\n\n\tmake_search_column(df, colsize) {\n\t\tlet title = \"\";\n\t\tlet input_class = \"\";\n\t\tlet is_disabled = \"\";\n\n\t\tif ([\"Text\", \"Small Text\"].includes(df.fieldtype)) {\n\t\t\tinput_class = \"grid-overflow-no-ellipsis\";\n\t\t} else if ([\"Int\", \"Currency\", \"Float\", \"Percent\"].includes(df.fieldtype)) {\n\t\t\tinput_class = \"text-right\";\n\t\t} else if (df.fieldtype === \"Check\") {\n\t\t\ttitle = __(\"1 = True & 0 = False\");\n\t\t\tinput_class = \"text-center\";\n\t\t} else if (df.fieldtype === \"Password\") {\n\t\t\tis_disabled = \"disabled\";\n\t\t\ttitle = __(\"Password cannot be filtered\");\n\t\t}\n\n\t\tlet $col = $(\n\t\t\t'<div class=\"col grid-static-col col-xs-' + colsize + ' search\"></div>'\n\t\t).appendTo(this.row);\n\n\t\tlet $search_input = $(`\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclass=\"form-control input-xs ${input_class}\"\n\t\t\t\ttitle=\"${title}\"\n\t\t\t\tdata-fieldtype=\"${df.fieldtype}\"\n\t\t\t\t${is_disabled}\n\t\t\t>\n\t\t`).appendTo($col);\n\n\t\tthis.search_columns[df.fieldname] = $col;\n\n\t\t$search_input.on(\n\t\t\t\"keyup\",\n\t\t\tfrappe.utils.debounce((e) => {\n\t\t\t\tthis.grid.filter[df.fieldname] = {\n\t\t\t\t\tdf: df,\n\t\t\t\t\tvalue: e.target.value,\n\t\t\t\t};\n\n\t\t\t\tif (e.target.value == \"\") {\n\t\t\t\t\tdelete this.grid.filter[df.fieldname];\n\t\t\t\t}\n\n\t\t\t\tthis.grid.grid_sortable.option(\n\t\t\t\t\t\"disabled\",\n\t\t\t\t\tObject.keys(this.grid.filter).length !== 0\n\t\t\t\t);\n\n\t\t\t\tthis.grid.prevent_build = true;\n\t\t\t\tthis.grid.grid_pagination.go_to_page(1);\n\t\t\t\tthis.grid.refresh();\n\t\t\t\tthis.grid.prevent_build = false;\n\t\t\t}, 500)\n\t\t);\n\n\t\t[\"Currency\", \"Float\", \"Int\", \"Percent\", \"Rating\"].includes(df.fieldtype) &&\n\t\t\tfrappe.utils.only_allow_num_decimal($search_input);\n\n\t\treturn $col;\n\t}\n\n\tmake_column(df, colsize, txt, ci) {\n\t\tlet me = this;\n\t\tvar add_class =\n\t\t\t[\"Text\", \"Small Text\"].indexOf(df.fieldtype) !== -1\n\t\t\t\t? \" grid-overflow-no-ellipsis\"\n\t\t\t\t: \"\";\n\t\tadd_class +=\n\t\t\t[\"Int\", \"Currency\", \"Float\", \"Percent\"].indexOf(df.fieldtype) !== -1\n\t\t\t\t? \" text-right\"\n\t\t\t\t: \"\";\n\t\tadd_class += [\"Check\"].indexOf(df.fieldtype) !== -1 ? \" text-center\" : \"\";\n\n\t\tlet grid;\n\t\tlet grid_container;\n\n\t\tlet inital_position_x = 0;\n\t\tlet start_x = 0;\n\t\tlet start_y = 0;\n\n\t\tlet input_in_focus = false;\n\n\t\tlet vertical = false;\n\t\tlet horizontal = false;\n\n\t\t// prevent random layout shifts caused by widgets and on click position elements inside view (UX).\n\t\tfunction on_input_focus(el) {\n\t\t\tinput_in_focus = true;\n\n\t\t\tlet container_width = grid_container.getBoundingClientRect().width;\n\t\t\tlet container_left = grid_container.getBoundingClientRect().left;\n\t\t\tlet grid_left = parseFloat(grid.style.left);\n\t\t\tlet element_left = el.offset().left;\n\t\t\tlet fieldtype = el.data(\"fieldtype\");\n\n\t\t\tlet offset_right = container_width - (element_left + el.width());\n\t\t\tlet offset_left = 0;\n\t\t\tlet element_screen_x = element_left - container_left;\n\t\t\tlet element_position_x = container_width - (element_left - container_left);\n\n\t\t\tif ([\"Date\", \"Time\", \"Datetime\"].includes(fieldtype)) {\n\t\t\t\toffset_left = element_position_x - 220;\n\t\t\t}\n\t\t\tif ([\"Link\", \"Dynamic Link\"].includes(fieldtype)) {\n\t\t\t\toffset_left = element_position_x - 250;\n\t\t\t}\n\t\t\tif (element_screen_x < 0) {\n\t\t\t\tgrid.style.left = `${grid_left - element_screen_x}px`;\n\t\t\t} else if (offset_left < 0) {\n\t\t\t\tgrid.style.left = `${grid_left + offset_left}px`;\n\t\t\t} else if (offset_right < 0) {\n\t\t\t\tgrid.style.left = `${grid_left + offset_right}px`;\n\t\t\t}\n\t\t}\n\n\t\t// Delay date_picker widget to prevent temparary layout shift (UX).\n\t\tfunction handle_date_picker() {\n\t\t\tlet date_time_picker = document.querySelectorAll(\".datepicker.active\")[0];\n\n\t\t\tdate_time_picker.classList.remove(\"active\");\n\t\t\tdate_time_picker.style.width = \"220px\";\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tdate_time_picker.classList.add(\"active\");\n\t\t\t}, 600);\n\t\t}\n\n\t\tvar $col = $(\n\t\t\t'<div class=\"col grid-static-col col-xs-' + colsize + \" \" + add_class + '\"></div>'\n\t\t)\n\t\t\t.attr(\"data-fieldname\", df.fieldname)\n\t\t\t.attr(\"data-fieldtype\", df.fieldtype)\n\t\t\t.data(\"df\", df)\n\t\t\t.appendTo(this.row)\n\t\t\t// initialize grid for horizontal scroll on mobile devices.\n\t\t\t.on(\"touchstart\", function (event) {\n\t\t\t\tgrid_container = $(event.currentTarget).closest(\".form-grid-container\")[0];\n\t\t\t\tgrid = $(event.currentTarget).closest(\".form-grid\")[0];\n\n\t\t\t\tgrid.style.position != \"relative\" && $(grid).css(\"position\", \"relative\");\n\t\t\t\t!grid.style.left && $(grid).css(\"left\", 0);\n\n\t\t\t\tstart_x = event.touches[0].clientX;\n\t\t\t\tstart_y = event.touches[0].clientY;\n\n\t\t\t\tinital_position_x = -parseFloat(grid.style.left || 0) + start_x;\n\t\t\t})\n\t\t\t// calculate X and Y movement based on touch events.\n\t\t\t.on(\"touchmove\", function (event) {\n\t\t\t\tif (input_in_focus) return;\n\n\t\t\t\tlet moved_x;\n\t\t\t\tlet moved_y;\n\n\t\t\t\tif (!horizontal && !vertical) {\n\t\t\t\t\tmoved_x = Math.abs(start_x - event.touches[0].clientX);\n\t\t\t\t\tmoved_y = Math.abs(start_y - event.touches[0].clientY);\n\t\t\t\t}\n\n\t\t\t\tif (!vertical && moved_x > 16) {\n\t\t\t\t\thorizontal = true;\n\t\t\t\t} else if (!horizontal && moved_y > 16) {\n\t\t\t\t\tvertical = true;\n\t\t\t\t}\n\t\t\t\tif (horizontal) {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tlet grid_start = inital_position_x - event.touches[0].clientX;\n\t\t\t\t\tlet grid_end = grid.clientWidth - grid_container.clientWidth + 2;\n\n\t\t\t\t\tif (frappe.utils.is_rtl()) {\n\t\t\t\t\t\tgrid_start = -grid_start;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (grid_start < 0) {\n\t\t\t\t\t\tgrid_start = 0;\n\t\t\t\t\t} else if (grid_start > grid_end) {\n\t\t\t\t\t\tgrid_start = grid_end;\n\t\t\t\t\t}\n\n\t\t\t\t\tgrid.style.left = `${frappe.utils.is_rtl() ? \"\" : \"-\"}${grid_start}px`;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(\"touchend\", function () {\n\t\t\t\tvertical = false;\n\t\t\t\thorizontal = false;\n\t\t\t})\n\t\t\t.on(\"click\", function (event) {\n\t\t\t\tif (frappe.ui.form.editable_row !== me) {\n\t\t\t\t\tvar out = me.toggle_editable_row();\n\t\t\t\t}\n\t\t\t\tvar col = this;\n\t\t\t\tlet first_input_field = $(col).find('input[type=\"Text\"]:first');\n\t\t\t\tlet input_in_focus = false;\n\n\t\t\t\t$(col)\n\t\t\t\t\t.find(\"input[type='text']\")\n\t\t\t\t\t.each(function () {\n\t\t\t\t\t\tif ($(this).is(\":focus\")) {\n\t\t\t\t\t\t\tinput_in_focus = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t!input_in_focus && first_input_field.trigger(\"focus\");\n\n\t\t\t\tif (event.pointerType == \"touch\") {\n\t\t\t\t\tfirst_input_field.length && on_input_focus(first_input_field);\n\n\t\t\t\t\tfirst_input_field.one(\"blur\", () => (input_in_focus = false));\n\n\t\t\t\t\tfirst_input_field.data(\"fieldtype\") == \"Date\" && handle_date_picker();\n\t\t\t\t}\n\n\t\t\t\treturn out;\n\t\t\t});\n\n\t\t$col.field_area = $('<div class=\"field-area\"></div>').appendTo($col).toggle(false);\n\t\t$col.static_area = $('<div class=\"static-area ellipsis\"></div>').appendTo($col).html(txt);\n\n\t\t// set title attribute to see full label for columns in the heading row\n\t\tif (!this.doc) {\n\t\t\t$col.attr(\"title\", txt);\n\t\t}\n\t\tdf.fieldname && $col.static_area.toggleClass(\"reqd\", Boolean(df.reqd));\n\n\t\t$col.df = df;\n\t\t$col.column_index = ci;\n\n\t\tthis.columns[df.fieldname] = $col;\n\t\tthis.columns_list.push($col);\n\n\t\treturn $col;\n\t}\n\n\tactivate() {\n\t\tthis.toggle_editable_row(true);\n\t\treturn this;\n\t}\n\n\ttoggle_editable_row(show) {\n\t\tvar me = this;\n\t\t// show static for field based on\n\t\t// whether grid is editable\n\t\tif (\n\t\t\tthis.grid.allow_on_grid_editing() &&\n\t\t\tthis.grid.is_editable() &&\n\t\t\tthis.doc &&\n\t\t\tshow !== false\n\t\t) {\n\t\t\t// disable other editable row\n\t\t\tif (frappe.ui.form.editable_row && frappe.ui.form.editable_row !== this) {\n\t\t\t\tfrappe.ui.form.editable_row.toggle_editable_row(false);\n\t\t\t}\n\n\t\t\tthis.row.toggleClass(\"editable-row\", true);\n\n\t\t\t// setup controls\n\t\t\tthis.columns_list.forEach(function (column) {\n\t\t\t\tme.make_control(column);\n\t\t\t\tcolumn.static_area.toggle(false);\n\t\t\t\tcolumn.field_area.toggle(true);\n\t\t\t});\n\n\t\t\tfrappe.ui.form.editable_row = this;\n\t\t\treturn false;\n\t\t} else {\n\t\t\tthis.row.toggleClass(\"editable-row\", false);\n\n\t\t\tthis.columns_list.forEach((column, index) => {\n\t\t\t\tif (!this.frm) {\n\t\t\t\t\tlet df = this.grid.visible_columns[index][0];\n\n\t\t\t\t\tlet txt = this.doc\n\t\t\t\t\t\t? frappe.format(this.doc[df.fieldname], df, null, this.doc)\n\t\t\t\t\t\t: __(df.label);\n\n\t\t\t\t\tthis.refresh_field(df.fieldname, txt);\n\t\t\t\t}\n\n\t\t\t\tif (!column.df.hidden) {\n\t\t\t\t\tcolumn.static_area.toggle(true);\n\t\t\t\t}\n\n\t\t\t\tcolumn.field_area && column.field_area.toggle(false);\n\t\t\t});\n\t\t\tfrappe.ui.form.editable_row = null;\n\t\t}\n\t}\n\n\tmake_control(column) {\n\t\tif (column.field) return;\n\n\t\tvar me = this,\n\t\t\tparent = column.field_area,\n\t\t\tdf = column.df;\n\n\t\t// no text editor in grid\n\t\tif (df.fieldtype == \"Text Editor\") {\n\t\t\tdf = Object.assign({}, df);\n\t\t\tdf.fieldtype = \"Text\";\n\t\t}\n\n\t\tvar field = frappe.ui.form.make_control({\n\t\t\tdf: df,\n\t\t\tparent: parent,\n\t\t\tonly_input: true,\n\t\t\twith_link_btn: true,\n\t\t\tdoc: this.doc,\n\t\t\tdoctype: this.doc.doctype,\n\t\t\tdocname: this.doc.name,\n\t\t\tfrm: this.grid.frm,\n\t\t\tgrid: this.grid,\n\t\t\tgrid_row: this,\n\t\t\tvalue: this.doc[df.fieldname],\n\t\t});\n\n\t\t// sync get_query\n\t\tfield.get_query = this.grid.get_field(df.fieldname).get_query;\n\n\t\tif (!field.df.onchange_modified) {\n\t\t\tvar field_on_change_function = field.df.onchange;\n\t\t\tfield.df.onchange = (e) => {\n\t\t\t\tfield_on_change_function && field_on_change_function(e);\n\t\t\t\tthis.refresh_field(field.df.fieldname);\n\t\t\t};\n\n\t\t\tfield.df.onchange_modified = true;\n\t\t}\n\n\t\tfield.refresh();\n\t\tif (field.$input) {\n\t\t\tfield.$input\n\t\t\t\t.addClass(\"input-sm\")\n\t\t\t\t.attr(\"data-col-idx\", column.column_index)\n\t\t\t\t.attr(\"placeholder\", __(df.placeholder || df.label));\n\t\t\t// flag list input\n\t\t\tif (this.columns_list && this.columns_list.slice(-1)[0] === column) {\n\t\t\t\tfield.$input.attr(\"data-last-input\", 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.set_arrow_keys(field);\n\t\tcolumn.field = field;\n\t\tthis.on_grid_fields_dict[df.fieldname] = field;\n\t\tthis.on_grid_fields.push(field);\n\t}\n\n\tset_arrow_keys(field) {\n\t\tvar me = this;\n\t\tlet ignore_fieldtypes = [\"Text\", \"Small Text\", \"Code\", \"Text Editor\", \"HTML Editor\"];\n\t\tif (field.$input) {\n\t\t\tfield.$input.on(\"keydown\", function (e) {\n\t\t\t\tvar { TAB, UP: UP_ARROW, DOWN: DOWN_ARROW } = frappe.ui.keyCode;\n\t\t\t\tif (!in_list([TAB, UP_ARROW, DOWN_ARROW], e.which)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar values = me.grid.get_data();\n\t\t\t\tvar fieldname = $(this).attr(\"data-fieldname\");\n\t\t\t\tvar fieldtype = $(this).attr(\"data-fieldtype\");\n\n\t\t\t\tlet ctrl_key = e.metaKey || e.ctrlKey;\n\t\t\t\tif (!in_list(ignore_fieldtypes, fieldtype) && ctrl_key && e.which !== TAB) {\n\t\t\t\t\tme.add_new_row_using_keys(e);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (e.shiftKey && e.altKey && DOWN_ARROW === e.which) {\n\t\t\t\t\tme.duplicate_row_using_keys();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar move_up_down = function (base) {\n\t\t\t\t\tif (in_list(ignore_fieldtypes, fieldtype) && !e.altKey) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (field.autocomplete_open) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tbase.toggle_editable_row();\n\t\t\t\t\tvar input = base.columns[fieldname].field.$input;\n\t\t\t\t\tif (input) {\n\t\t\t\t\t\tinput.focus();\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\n\t\t\t\t// TAB\n\t\t\t\tif (e.which === TAB && !e.shiftKey) {\n\t\t\t\t\tvar last_column = me.wrapper.find(\":input:enabled:last\").get(0);\n\t\t\t\t\tvar is_last_column = $(this).attr(\"data-last-input\") || last_column === this;\n\n\t\t\t\t\tif (is_last_column) {\n\t\t\t\t\t\t// last row\n\t\t\t\t\t\tif (me.doc.idx === values.length) {\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tme.grid.add_new_row(null, null, true);\n\t\t\t\t\t\t\t\tme.grid.grid_rows[\n\t\t\t\t\t\t\t\t\tme.grid.grid_rows.length - 1\n\t\t\t\t\t\t\t\t].toggle_editable_row();\n\t\t\t\t\t\t\t\tme.grid.set_focus_on_row();\n\t\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// last column before last row\n\t\t\t\t\t\t\tme.grid.grid_rows[me.doc.idx].toggle_editable_row();\n\t\t\t\t\t\t\tme.grid.set_focus_on_row(me.doc.idx);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (e.which === UP_ARROW) {\n\t\t\t\t\tif (me.doc.idx > 1) {\n\t\t\t\t\t\tvar prev = me.grid.grid_rows[me.doc.idx - 2];\n\t\t\t\t\t\tif (move_up_down(prev)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (e.which === DOWN_ARROW) {\n\t\t\t\t\tif (me.doc.idx < values.length) {\n\t\t\t\t\t\tvar next = me.grid.grid_rows[me.doc.idx];\n\t\t\t\t\t\tif (move_up_down(next)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tduplicate_row_using_keys() {\n\t\tsetTimeout(() => {\n\t\t\tthis.insert(false, true, true);\n\t\t\tthis.grid.grid_rows[this.doc.idx].toggle_editable_row();\n\t\t\tthis.grid.set_focus_on_row(this.doc.idx);\n\t\t}, 100);\n\t}\n\n\tadd_new_row_using_keys(e) {\n\t\tlet idx = \"\";\n\n\t\tlet ctrl_key = e.metaKey || e.ctrlKey;\n\t\tlet is_down_arrow_key_press = e.which === 40;\n\n\t\t// Add new row at the end or start of the table\n\t\tif (ctrl_key && e.shiftKey) {\n\t\t\tidx = is_down_arrow_key_press ? null : 1;\n\t\t\tthis.grid.add_new_row(\n\t\t\t\tidx,\n\t\t\t\tnull,\n\t\t\t\tis_down_arrow_key_press,\n\t\t\t\tfalse,\n\t\t\t\tis_down_arrow_key_press,\n\t\t\t\t!is_down_arrow_key_press\n\t\t\t);\n\t\t\tidx = is_down_arrow_key_press ? cint(this.grid.grid_rows.length) - 1 : 0;\n\t\t} else if (ctrl_key) {\n\t\t\tidx = is_down_arrow_key_press ? this.doc.idx : this.doc.idx - 1;\n\t\t\tthis.insert(false, is_down_arrow_key_press);\n\t\t}\n\n\t\tif (idx !== \"\") {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.grid.grid_rows[idx].toggle_editable_row();\n\t\t\t\tthis.grid.set_focus_on_row(idx);\n\t\t\t}, 100);\n\t\t}\n\t}\n\n\tget_open_form() {\n\t\treturn frappe.ui.form.get_open_grid_form();\n\t}\n\n\ttoggle_view(show, callback) {\n\t\tif (!this.doc) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.frm) {\n\t\t\t// reload doc\n\t\t\tthis.doc = locals[this.doc.doctype][this.doc.name];\n\t\t}\n\n\t\t// hide other\n\t\tvar open_row = this.get_open_form();\n\n\t\tif (show === undefined) show = !open_row;\n\n\t\t// call blur\n\t\tdocument.activeElement && document.activeElement.blur();\n\n\t\tif (show && open_row) {\n\t\t\tif (open_row == this) {\n\t\t\t\t// already open, do nothing\n\t\t\t\tcallback && callback();\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// close other views\n\t\t\t\topen_row.toggle_view(false);\n\t\t\t}\n\t\t}\n\n\t\tif (show) {\n\t\t\tthis.show_form();\n\t\t} else {\n\t\t\tthis.hide_form();\n\t\t}\n\t\tcallback && callback();\n\n\t\treturn this;\n\t}\n\tshow_form() {\n\t\tif (frappe.utils.is_xs()) {\n\t\t\t$(this.grid.form_grid).css(\"min-width\", \"0\");\n\t\t\t$(this.grid.form_grid).css(\"position\", \"unset\");\n\t\t}\n\t\tif (!this.grid_form) {\n\t\t\tthis.grid_form = new GridRowForm({\n\t\t\t\trow: this,\n\t\t\t});\n\t\t}\n\t\tthis.grid_form.render();\n\t\tthis.row.toggle(false);\n\t\t// this.form_panel.toggle(true);\n\n\t\tlet cannot_add_rows =\n\t\t\tthis.grid.cannot_add_rows || (this.grid.df && this.grid.df.cannot_add_rows);\n\t\tthis.wrapper\n\t\t\t.find(\n\t\t\t\t\".grid-insert-row-below, .grid-insert-row, .grid-duplicate-row, .grid-append-row\"\n\t\t\t)\n\t\t\t.toggle(!cannot_add_rows);\n\n\t\tthis.wrapper\n\t\t\t.find(\".grid-delete-row\")\n\t\t\t.toggle(!(this.grid.df && this.grid.df.cannot_delete_rows));\n\n\t\tfrappe.dom.freeze(\"\", \"dark grid-form\");\n\t\tif (cur_frm) cur_frm.cur_grid = this;\n\t\tthis.wrapper.addClass(\"grid-row-open\");\n\t\t// if (\n\t\t// \t!frappe.dom.is_element_in_viewport(this.wrapper) &&\n\t\t// \t!frappe.dom.is_element_in_modal(this.wrapper)\n\t\t// ) {\n\t\t// \t// -15 offset to make form look visually centered\n\t\t// \tfrappe.utils.scroll_to(this.wrapper, true, -15);\n\t\t// }\n        console.log('AAABBBB');        \n\t\tif (this.frm) {\n\t\t\tthis.frm.script_manager.trigger(this.doc.parentfield + \"_on_form_rendered\");\n\t\t\tthis.frm.script_manager.trigger(\"form_render\", this.doc.doctype, this.doc.name);\n\t\t}\n\t}\n\thide_form() {\n\t\tif (frappe.utils.is_xs()) {\n\t\t\t$(this.grid.form_grid).css(\"min-width\", \"738px\");\n\t\t\t$(this.grid.form_grid).css(\"position\", \"relative\");\n\t\t}\n\t\tfrappe.dom.unfreeze();\n\t\tthis.row.toggle(true);\n\t\t// if (!frappe.dom.is_element_in_modal(this.row)) {\n\t\t// \tfrappe.utils.scroll_to(this.row, true, 15);\n\t\t// }\n\n        console.log('AAABBBBCCC');  \n\t\tthis.refresh();\n\t\tif (cur_frm) cur_frm.cur_grid = null;\n\t\tthis.wrapper.removeClass(\"grid-row-open\");\n\t}\n\topen_prev() {\n\t\tif (!this.doc) return;\n\t\tthis.open_row_at_index(this.doc.idx - 2);\n\t}\n\topen_next() {\n\t\tif (!this.doc) return;\n\n\t\tif (!this.open_row_at_index(this.doc.idx)) {\n\t\t\tthis.grid.add_new_row(null, null, true);\n\t\t}\n\t}\n\topen_row_at_index(row_index) {\n\t\tif (!this.grid.data[row_index]) return;\n\n\t\tthis.change_page_if_reqd(row_index);\n\t\tthis.grid.grid_rows[row_index].toggle_view(true);\n\t\treturn true;\n\t}\n\tchange_page_if_reqd(row_index) {\n\t\tconst { page_index, page_length } = this.grid.grid_pagination;\n\n\t\trow_index++;\n\t\tlet new_page;\n\n\t\tif (row_index <= (page_index - 1) * page_length) {\n\t\t\tnew_page = page_index - 1;\n\t\t} else if (row_index > page_index * page_length) {\n\t\t\tnew_page = page_index + 1;\n\t\t}\n\n\t\tif (new_page) {\n\t\t\tthis.grid.grid_pagination.go_to_page(new_page);\n\t\t}\n\t}\n\trefresh_field(fieldname, txt) {\n\t\tlet fields =\n\t\t\tthis.grid.user_defined_columns && this.grid.user_defined_columns.length > 0\n\t\t\t\t? this.grid.user_defined_columns\n\t\t\t\t: this.docfields;\n\n\t\tlet df = fields.find((col) => {\n\t\t\treturn col?.fieldname === fieldname;\n\t\t});\n\n\t\t// format values if no frm\n\t\tif (df && this.doc) {\n\t\t\ttxt = frappe.format(this.doc[fieldname], df, null, this.doc);\n\t\t}\n\n\t\tif (!txt && this.frm) {\n\t\t\ttxt = frappe.format(this.doc[fieldname], df, null, this.frm.doc);\n\t\t}\n\n\t\t// reset static value\n\t\tlet column = this.columns[fieldname];\n\t\tif (column) {\n\t\t\tcolumn.static_area.html(txt || \"\");\n\t\t\tif (df && df.reqd) {\n\t\t\t\tcolumn.toggleClass(\"error\", !!(txt === null || txt === \"\"));\n\t\t\t}\n\t\t}\n\n\t\tlet field = this.on_grid_fields_dict[fieldname];\n\t\t// reset field value\n\t\tif (field) {\n\t\t\tfield.docname = this.doc.name;\n\t\t\tfield.refresh();\n\t\t}\n\n\t\t// in form\n\t\tif (this.grid_form) {\n\t\t\tthis.grid_form.refresh_field(fieldname);\n\t\t}\n\t}\n\tget_field(fieldname) {\n\t\tlet field = this.on_grid_fields_dict[fieldname];\n\t\tif (field) {\n\t\t\treturn field;\n\t\t} else if (this.grid_form) {\n\t\t\treturn this.grid_form.fields_dict[fieldname];\n\t\t} else {\n\t\t\tthrow `fieldname ${fieldname} not found`;\n\t\t}\n\t}\n\n\tget_visible_columns(blacklist = []) {\n\t\tvar me = this;\n\t\tvar visible_columns = $.map(this.docfields, function (df) {\n\t\t\tvar visible =\n\t\t\t\t!df.hidden &&\n\t\t\t\tdf.in_list_view &&\n\t\t\t\tme.grid.frm.get_perm(df.permlevel, \"read\") &&\n\t\t\t\t!in_list(frappe.model.layout_fields, df.fieldtype) &&\n\t\t\t\t!in_list(blacklist, df.fieldname);\n\n\t\t\treturn visible ? df : null;\n\t\t});\n\t\treturn visible_columns;\n\t}\n\tset_field_property(fieldname, property, value) {\n\t\t// set a field property for open form / grid form\n\t\tvar me = this;\n\n\t\tvar set_property = function (field) {\n\t\t\tif (!field) return;\n\t\t\tfield.df[property] = value;\n\t\t\tfield.refresh();\n\t\t};\n\n\t\t// set property in grid form\n\t\tif (this.grid_form) {\n\t\t\tset_property(this.grid_form.fields_dict[fieldname]);\n\t\t\tthis.grid_form.layout && this.grid_form.layout.refresh_sections();\n\t\t}\n\n\t\t// set property in on grid fields\n\t\tset_property(this.on_grid_fields_dict[fieldname]);\n\t}\n\ttoggle_reqd(fieldname, reqd) {\n\t\tthis.set_field_property(fieldname, \"reqd\", reqd ? 1 : 0);\n\t}\n\ttoggle_display(fieldname, show) {\n\t\tthis.set_field_property(fieldname, \"hidden\", show ? 0 : 1);\n\t}\n\ttoggle_editable(fieldname, editable) {\n\t\tthis.set_field_property(fieldname, \"read_only\", editable ? 0 : 1);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
